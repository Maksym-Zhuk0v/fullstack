generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String @unique
    password String
    role     UserRole  @default(USER)
    verified DateTime?

    provider   String?
    providerId String?

    verificationCode RegisterVerificationCode?

    appointment Appointment?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model RegisterVerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

model Appointment {
  id Int @id @default(autoincrement())
  user User? @relation(fields: [userId], references: [id])
  userId Int? @unique
  email String @unique
  fullName String
  typeOfDamage String[]
  dateTime DateTime?
  verified DateTime?
  token String?
  appointmentVerificationCode AppointmentVerificationCode?
  createdAt DateTime @default(now())
  calendar Calendar?
  calendarId Int? @unique
}

model Calendar {
  id Int @id @default(autoincrement())
  available String @default("false")
  date DateTime
  appointment Appointment? @relation(fields: [appointmentId], references: [id])
  appointmentId Int? @unique
}

model AppointmentVerificationCode {
    id Int @id @default(autoincrement())

    appointment   Appointment @relation(fields: [appointmentId], references: [id])
    appointmentId Int  @unique

    code String

    createdAt DateTime @default(now())

    @@unique([appointmentId, code])
}

model ChangeProrile {
    id Int @id @default(autoincrement())

    currEmail String
    newEmail String

    changeProrileVerificationCode ChangeProrileVerificationCode?
}

model ChangeProrileVerificationCode {
    id Int @id @default(autoincrement())

    appointment   ChangeProrile @relation(fields: [changeProrile], references: [id])
    changeProrile Int  @unique

    code String

    createdAt DateTime @default(now())

    @@unique([changeProrile, code])
}

model Story {
    id              Int    @id @default(autoincrement())
    previewImageUrl String

    items StoryItem[]

    createdAt DateTime @default(now())
}

model StoryItem {
    id Int @id @default(autoincrement())

    storyId Int
    story   Story @relation(fields: [storyId], references: [id])

    sourceUrl String

    createdAt DateTime @default(now())
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}
